<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.hua</groupId>
	<artifactId>test-entire</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	<name>test-entire</name>
	<description>test Maven Entire Project</description>

	<!-- 模块-子项目 -->
	<modules>
		<!-- 模板 -->
		<module>test-template</module>
		<module>appium-client</module>
		<module>ant-unit</module>
		<module>dbunit</module>
		<module>dbunit-spring</module>
		<module>dbunit2</module>
		<module>dbutils</module>
		<module>mockito</module>
		<module>mockito-spring-boot</module>
		<module>mock-server</module>
		<module>junit</module>
		<module>junit-spring</module>
		<module>junit5-spring</module>
		<module>junit4</module>
		<module>junit5</module>
		<module>jmockit</module>
		<module>jmockit-spring-boot</module>
		<module>powermock</module>
		<module>test-core</module>
		<module>unitils</module>
		<module>unitils-dbunit</module>
		<module>unitils-spring</module>
		<module>unitils3</module>
	</modules>

	<!-- 公共属性 -->
	<properties>
		<jdk.version>1.8</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.version>1.0.0</maven.version>
		<maven.plugin.compiler.version>3.3</maven.plugin.compiler.version>
		<maven.plugin.source.version>2.4</maven.plugin.source.version>
		<maven.plugin.surefire.version>2.18.1</maven.plugin.surefire.version>
		<maven.plugin.assembly.version>2.5.5</maven.plugin.assembly.version>
		<maven.plugin.resources.version>2.7</maven.plugin.resources.version>
		<maven.plugin.dependency.version>2.10</maven.plugin.dependency.version>
		<maven.plugin.war.version>3.0</maven.plugin.war.version>
		<spring.version>5.1.2.RELEASE</spring.version>
		<common.version>1.0.0</common.version>
		<web.version>1.0.0</web.version>
		<!-- 1.49 需要手工增加VM参数(例如) -javaagent:C:/repository/org/jmockit/jmockit/1.49/jmockit-1.49.jar -->
		<jmockit.version>1.41</jmockit.version>
		<mock-server.version>5.11.2</mock-server.version>
		<powermock.version>2.0.9</powermock.version>
		<mockito.version>3.6.0</mockito.version>
		<junit4.version>4.13.1</junit4.version>
		<junit.version>5.7.0</junit.version>
		<junit.platform.version>1.7.0</junit.platform.version>
		<powermock.junit5.version>1.6.4</powermock.junit5.version>
		<test.version>1.0.0</test.version>
		<apache.ant.unit.version>1.3</apache.ant.unit.version>
		<com.hua.junit.version>1.0.0</com.hua.junit.version>
		<com.hua.junit5.test.version>1.0.0</com.hua.junit5.test.version>
		<appium.clent.version>a873737fce</appium.clent.version>
		<dbunit.version>2.5.0</dbunit.version>
		<com.hua.dbunit.version>1.0.0</com.hua.dbunit.version>
		<unitils.version>3.4.2</unitils.version>
		<com.hua.unitils.version>1.0.0</com.hua.unitils.version>
	</properties>


	<!-- 公共构建 -->
	<build>
		<plugins>

			<!-- 编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.plugin.compiler.version}</version>
				<configuration>
					<compilerVersion>${jdk.version}</compilerVersion>
					<!-- 编译的类文件是否包含调试信息 -->
					<debug>true</debug>
					<!-- 是否展示详细的设置信息 -->
					<detail>true</detail>
					<!-- 指定编译文件的编码 -->
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- 编译失败是否停止 -->
					<failOnError>true</failOnError>
					<!-- 是否强制jdk版本 -->
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
					<!-- 是否分开执行编译，设置为true会导致部分输出中文乱码 -->
					<fork>false</fork>
					<!-- 输出源码文件名 -->
					<outputFileName>a.jar</outputFileName>
					<!-- 源码位置是否显示过期api被使用 -->
					<showDeprecation>true</showDeprecation>
					<!-- 是否输出编译警告 -->
					<showWarnings>false</showWarnings>
					<!-- 忽略测试 -->
					<skip>true</skip>
					<!-- 是否忽略main源码 -->
					<skipMain>false</skipMain>
					<!-- main编译器版本 source 和 target 要保持一致 -->
					<source>${jdk.version}</source>
					<!-- main编译器版本 source 和 target 要保持一致 -->
					<target>${jdk.version}</target>
					<!-- 测试编译器版本 source 和 target 要保持一致 -->
					<testSource>${jdk.version}</testSource>
					<!-- 测试编译器版本 source 和 target 要保持一致 -->
					<testTarget>${jdk.version}</testTarget>
					<!-- 输出编译器详细运行信息 -->
					<verbose>false</verbose>

				</configuration>
			</plugin>

			<!-- 资源插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.plugin.resources.version}</version>
				<configuration>
					<!-- 指定文件的编码 -->
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- 包含空目录 -->
					<includeEmptyDirs>true</includeEmptyDirs>
					<!-- 是否直接覆盖 -->
					<overwrite>true</overwrite>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<includeEmptyDirs>true</includeEmptyDirs>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 打包插件，打包当前项目相关文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.plugin.surefire.version}</version>
				<configuration>
					<!-- 解决 控制台输出测试信息 - 乱码 -->
					<argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
					<reuseForks>true</reuseForks>
					<!-- 打包时跳过单元测试 -->
					<skip>true</skip>
					<skipTests>true</skipTests>
					<!-- 忽略测试失败 -->
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>

			<!-- 要将源码放上去，需要加入这个插件 -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
					<attach>true</attach>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>test-core</artifactId>
				<version>${test.version}</version>
			</dependency>
			<!-- spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit4.version}</version>
			</dependency>

			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${junit.version}</version>
			</dependency>

			<dependency>
				<groupId>org.junit.vintage</groupId>
				<artifactId>junit-vintage-engine</artifactId>
				<version>${junit.version}</version>
			</dependency>

			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-launcher</artifactId>
				<version>${junit.platform.version}</version>
			</dependency>

			<!-- 参数化 -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-params</artifactId>
				<version>${junit.version}</version>
			</dependency>

			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-runner</artifactId>
				<version>${junit.platform.version}</version>
			</dependency>

			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-engine</artifactId>
				<version>${junit.platform.version}</version>
			</dependency>

			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${junit.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jmockit</groupId>
				<artifactId>jmockit</artifactId>
				<version>${jmockit.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mock-server</groupId>
				<artifactId>mockserver-netty</artifactId>
				<version>${mock-server.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mock-server</groupId>
				<artifactId>mockserver-client-java</artifactId>
				<version>${mock-server.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito2</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit5</artifactId>
				<version>${powermock.junit5.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${mockito.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>common</artifactId>
				<version>${common.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.ant</groupId>
				<artifactId>ant-antunit</artifactId>
				<version>${apache.ant.unit.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>junit</artifactId>
				<version>${com.hua.junit.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>junit5</artifactId>
				<version>${com.hua.junit5.test.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.appium</groupId>
				<artifactId>java-client</artifactId>
				<version>${appium.clent.version}</version>
			</dependency>

			<dependency>
				<groupId>org.dbunit</groupId>
				<artifactId>dbunit</artifactId>
				<version>${dbunit.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>dbunit</artifactId>
				<version>${com.hua.dbunit.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>web</artifactId>
				<version>${web.version}</version>
			</dependency>

			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils-core</artifactId>
				<version>${unitils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils-spring</artifactId>
				<version>${unitils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils-mock</artifactId>
				<version>${unitils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils-dbunit</artifactId>
				<version>${unitils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils-test</artifactId>
				<version>${unitils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils-database</artifactId>
				<version>${unitils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils-orm</artifactId>
				<version>${unitils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils-io</artifactId>
				<version>${unitils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils-mock</artifactId>
				<version>${unitils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils-dbmaintainer</artifactId>
				<version>${unitils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils-testng</artifactId>
				<version>${unitils.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>unitils</artifactId>
				<version>${com.hua.unitils.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

</project>